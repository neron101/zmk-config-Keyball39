#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        new_macro1: new_macro1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_1 &kp NUMBER_1 &kp NUMBER_1 &kp NUMBER_1 &kp ENTER>;
            label = "NEW_MACRO1";
        };

        new_macromail: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp U &kp N &kp E &kp H &kp O &kp N &kp E &kp AT_SIGN &kp M &kp A &kp C &kp PERIOD &kp C &kp O &kp M>;
            label = "NEW_MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        lay6 {
            bindings = <&none>;
            key-positions = <0 9>;
            layers = <6>;
        };

        lay1 {
            bindings = <&none>;
            key-positions = <10 19>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q     &kp W     &kp E             &kp R     &kp T                              &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A     &kp S     &kp D             &kp F     &kp G                              &kp H            &kp J  &kp K      &kp L    &kp SEMI
&kp Z     &kp X     &kp C             &kp V     &kp B                              &kp N            &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp CLCK  &kp LALT  &kp LEFT_CONTROL  &kp LGUI  &lt 3 SPACE  &mkp LCLK  &kp ENTER  &lt 1 BACKSPACE                             &kp RSHFT
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN     &kp HASH       &kp DOLLAR    &kp PERCENT                        &kp LANGUAGE_1     &kp LANGUAGE_2     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&bt BT_CLR       &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2  &kp C_VOLUME_UP                    &kp RG(RS(MINUS))  &kp RG(RS(EQUAL))  &kp LEFT_BRACKET   &kp Q                 &kp TAB
&kp ESC          &kp PAGE_UP     &kp PAGE_DOWN  &kp K_MUTE    &kp C_VOLUME_DOWN                  &kp SLASH          &kp RS(SLASH)      &kp RG(RS(COMMA))  &kp RG(RS(PERIOD))    &kp HOME
&kp LANGUAGE_1   &kp LANGUAGE_2  &kp LCTRL      &trans        &trans             &trans  &trans  &trans                                                                         &kp END
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &none                   &none   &none  &none  &none  &none
&kp F5  &kp F6   &kp F7   &kp F8   &none                   &none   &none  &none  &none  &none
&kp F9  &kp F10  &kp F11  &kp F12  &none                   &none   &none  &none  &none  &none
&trans  &trans   &trans   &trans   &trans  &trans  &trans  &trans                       &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&kp N1          &kp N2          &kp N3          &kp NUMBER_4     &kp N5                              &kp N6     &kp N7        &kp N8            &kp N9             &kp N0
&kp LG(LS(Z))   &mkp RCLK       &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp UP_ARROW                        &kp MINUS  &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp TILDE
&kp LG(Z)       &kp LG(X)       &kp LG(C)       &kp LG(V)        &kp DOWN                            &kp SLASH  &kp QUESTION  &kp COMMA         &kp PERIOD         &mkp RCLK
&kp LANGUAGE_1  &kp LANGUAGE_2  &kp LCTRL       &kp LCMD         &kp SPACE     &mkp LCLK  &kp ENTER  &mo 2                                                         &new_macro1
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none                       &none
            >;
        };

        layer_6 {
            bindings = <
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none                       &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        neron101 {
            if-layers = <0>;
            then-layer = <0>;
        };
    };
};
