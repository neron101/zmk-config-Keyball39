#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q     &kp W     &kp E     &kp R      &kp T                              &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A     &kp S     &kp D     &kp F      &kp G                              &kp H            &kp J  &kp K      &kp L    &kp SEMI
&kp Z     &kp X     &kp C     &kp V      &kp B                              &kp N            &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp CLCK  &kp LALT  &kp LCMD  &kp LCTRL  &lt 3 SPACE  &mkp LCLK  &kp ENTER  &lt 1 BACKSPACE                             &kp RSHFT
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                  &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans                       &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SQT
&trans           &trans        &trans        &trans        &trans                       &kp UNDERSCORE  &kp PLUS       &trans            &trans                &kp NON_US_BACKSLASH
&trans           &trans        &trans        &trans        &trans       &trans  &trans  &trans                                                                 &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &none                   &none   &none  &none  &none  &none
&kp F5  &kp F6   &kp F7   &kp F8   &none                   &none   &none  &none  &none  &none
&kp F9  &kp F10  &kp F11  &kp F12  &none                   &none   &none  &none  &none  &none
&trans  &trans   &trans   &trans   &trans  &trans  &trans  &trans                       &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&kp N1            &kp N2            &kp N3            &kp NUMBER_4      &kp N5                      &kp N6            &kp N7             &kp N8          &kp N9     &kp N0
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)                  &kp MINUS         &kp EQUAL          &kp RS(SLASH)   &kp TILDE  &kp SEMICOLON
&kp LS(NUMBER_6)  &kp LS(N7)        &kp LS(N8)        &kp LS(N9)        &kp LS(N0)                  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_ARROW  &kp RIGHT  &kp UP
&none             &trans            &trans            &trans            &trans      &trans  &trans  &mo 2                                                           &kp DOWN_ARROW
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans      &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &caps_word  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        neron101 {
            if-layers = <0>;
            then-layer = <0>;
        };
    };
};
